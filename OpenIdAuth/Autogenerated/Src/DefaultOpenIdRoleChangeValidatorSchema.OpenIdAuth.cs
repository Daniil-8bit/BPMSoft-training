namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DefaultOpenIdRoleChangeValidatorSchema

	/// <exclude/>
	public class DefaultOpenIdRoleChangeValidatorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DefaultOpenIdRoleChangeValidatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DefaultOpenIdRoleChangeValidatorSchema(DefaultOpenIdRoleChangeValidatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("4fcf7fa3-9797-433e-9321-4ff8f0106b2b");
			Name = "DefaultOpenIdRoleChangeValidator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("5daf09f1-167a-4d95-90ab-547ed370e530");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,149,84,201,78,227,64,16,61,7,137,127,232,132,139,35,69,254,0,152,25,137,36,4,249,16,64,19,152,11,66,163,142,93,78,90,178,187,173,94,144,44,148,127,159,234,197,113,108,18,50,220,236,234,170,247,170,94,45,156,150,160,42,154,2,153,62,45,87,34,215,241,76,240,156,109,140,164,154,9,30,63,86,192,147,236,214,232,237,229,197,199,229,197,192,40,198,55,100,85,43,13,229,205,254,191,141,149,112,220,26,223,113,205,52,3,117,226,121,65,83,45,164,127,71,143,43,9,27,164,39,179,130,42,117,77,230,144,83,83,104,159,204,111,81,192,108,75,249,6,254,208,130,101,20,227,92,204,107,240,154,50,158,33,126,164,235,10,68,30,37,39,163,198,227,55,12,171,204,186,96,41,73,45,211,89,34,114,77,78,227,33,152,149,104,159,252,18,244,86,100,152,254,147,100,239,84,131,203,114,80,249,31,226,4,169,201,61,104,255,21,189,40,144,40,62,135,212,42,79,76,231,119,66,148,150,86,53,112,206,15,216,182,49,113,108,131,119,42,137,74,183,80,82,242,179,23,229,85,175,87,238,117,73,57,221,128,140,145,49,225,74,83,158,194,212,1,69,7,152,55,14,82,130,54,146,7,212,120,38,1,19,14,89,118,9,188,255,174,91,217,90,136,130,36,202,214,179,144,162,244,122,157,43,239,222,176,204,25,147,172,41,44,21,152,102,83,183,112,40,43,179,158,137,194,148,220,38,139,229,142,28,248,28,205,163,155,86,140,90,221,102,37,227,47,156,105,244,105,21,238,115,142,86,7,158,163,80,187,231,123,125,35,127,83,199,164,158,197,2,116,186,69,164,143,163,89,236,124,28,203,73,116,200,28,187,40,43,192,124,218,125,240,237,136,113,42,74,42,107,143,20,91,168,73,16,96,210,231,30,55,146,12,250,106,96,86,29,108,44,246,25,231,62,243,168,56,154,6,126,248,152,95,209,145,228,67,205,77,195,135,222,53,78,212,131,41,138,71,121,87,86,40,219,62,46,120,239,14,103,36,167,133,130,47,166,192,238,201,55,167,64,98,72,59,5,77,71,139,210,66,157,239,167,247,107,186,217,116,197,91,59,61,25,57,191,73,160,115,218,207,153,170,10,90,59,217,112,111,93,109,173,246,161,98,45,13,252,143,16,87,192,51,127,9,194,255,167,179,224,46,79,80,205,95,33,39,218,140,114,127,89,172,88,9,183,105,126,99,123,142,138,232,112,89,111,37,81,203,79,91,218,7,14,27,217,138,57,236,163,156,147,39,80,119,231,192,81,247,70,163,79,29,42,232,92,164,97,31,232,11,193,189,181,107,220,145,127,231,196,146,98,241,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("4fcf7fa3-9797-433e-9321-4ff8f0106b2b"));
		}

		#endregion

	}

	#endregion

}

