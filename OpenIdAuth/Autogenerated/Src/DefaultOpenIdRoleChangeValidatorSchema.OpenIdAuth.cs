namespace BPMSoft.Configuration
{

	using BPMSoft.Common;
	using BPMSoft.Core;
	using BPMSoft.Core.Configuration;
	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;

	#region Class: DefaultOpenIdRoleChangeValidatorSchema

	/// <exclude/>
	public class DefaultOpenIdRoleChangeValidatorSchema : BPMSoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public DefaultOpenIdRoleChangeValidatorSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public DefaultOpenIdRoleChangeValidatorSchema(DefaultOpenIdRoleChangeValidatorSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("4fcf7fa3-9797-433e-9321-4ff8f0106b2b");
			Name = "DefaultOpenIdRoleChangeValidator";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("5daf09f1-167a-4d95-90ab-547ed370e530");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,0,3,149,84,219,110,226,48,16,125,6,169,255,96,232,75,144,80,62,160,236,174,84,66,169,242,64,91,45,237,190,84,213,202,36,19,176,148,216,145,47,149,162,138,127,223,137,237,16,146,66,217,190,37,227,153,115,102,206,92,56,45,64,149,52,1,50,127,90,173,69,166,195,72,240,140,109,141,164,154,9,30,62,150,192,227,244,214,232,221,213,240,227,106,56,48,138,241,45,89,87,74,67,49,59,252,183,177,18,78,91,195,59,174,153,102,160,206,60,47,105,162,133,116,239,232,113,45,97,139,244,36,202,169,82,55,100,1,25,53,185,118,201,252,22,57,68,59,202,183,240,135,230,44,165,24,103,99,94,189,215,156,241,20,241,3,93,149,32,178,32,62,27,53,153,188,97,88,105,54,57,75,72,82,51,93,36,34,55,228,60,30,130,213,18,29,146,95,129,222,137,20,211,127,146,236,157,106,176,89,14,74,247,67,172,32,21,185,7,237,190,130,23,5,18,197,231,144,212,202,19,211,249,157,18,165,101,173,26,88,231,7,108,219,132,88,182,193,59,149,68,37,59,40,40,249,217,139,114,170,87,107,251,186,162,156,110,65,134,200,24,115,165,41,79,96,110,129,130,35,204,153,133,148,160,141,228,30,53,140,36,96,194,62,203,46,129,243,223,119,43,219,8,145,147,88,213,245,44,165,40,156,94,151,202,187,55,44,181,198,56,109,10,75,4,166,217,212,45,44,202,218,108,34,145,155,130,215,201,98,185,99,11,190,64,243,120,214,138,81,169,219,180,96,252,133,51,141,62,173,194,125,206,241,250,200,115,236,107,119,124,175,111,228,111,98,153,212,179,88,130,78,118,136,244,113,50,139,189,139,99,25,9,142,153,67,27,85,11,176,152,119,31,92,59,66,156,138,130,202,202,33,133,53,212,212,11,48,237,115,79,26,73,6,125,53,48,171,14,54,22,251,140,115,159,58,84,28,77,3,63,92,204,175,224,68,242,190,230,166,225,35,231,26,198,234,193,228,249,163,188,43,74,148,237,16,231,189,247,199,51,146,209,92,193,23,83,80,239,201,55,167,64,98,72,59,5,77,71,243,162,134,186,220,79,231,215,116,179,233,138,179,118,122,50,182,126,83,79,103,181,95,48,85,230,180,178,178,225,222,218,218,90,237,125,197,90,26,248,31,33,174,129,167,238,18,248,255,79,103,193,94,30,175,154,187,66,86,180,136,114,119,89,106,177,98,94,167,249,141,237,57,41,162,197,101,189,149,68,45,63,109,105,31,216,111,100,43,230,168,143,114,73,30,79,221,157,3,75,221,27,141,62,181,175,160,115,145,70,125,160,47,4,119,214,174,113,79,134,255,0,140,227,219,12,242,6,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("4fcf7fa3-9797-433e-9321-4ff8f0106b2b"));
		}

		#endregion

	}

	#endregion

}

